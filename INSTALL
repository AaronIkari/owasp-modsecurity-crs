Core Rule Set 3.x Quick Setup 
=========================

To activate the rules for your web server installation:

  1) Copy the modsecurity_crs_10_setup.conf.example file to modsecurity_crs_10_setup.conf. Please take this time to go through this file and customize the settings for your local environment.

     The modsecurity_crs_10_setup.conf file includes management rules and directives
     that can control important CRS functions. By default we do not include settings within this file that configure 'main ModSecurity' instead those configuration settings, including SecDefaultEngine (if the rules are enforcing). An example for such such a configuration file is available via the ModSecurity project (https://github.com/SpiderLabs/ModSecurity/blob/master/modsecurity.conf-recommended).
	 Be aware the modsecurity_crs_10_setup.conf file does specify configuration directives such as SecDefaultAction. The default setting is to redirect to the sites homepage on a rule triggering. To enable anomoly scoring mode SecDefaultAction should be set to "pas". In this case, the rules in 49 inbound blocking and 59 outbound blocking files will be the only rules that will distrubt requests/response, specific disruptions, such as redirects and status responses, can be configured at this locations.

     If using anomoly/coorelation mode you should update the appropriate anomaly scores and thresholds the thresholds will be propagated to the inbound/outbound blocking files well the scores will be used to prioritize the criticalitly of rule types triggering.

     Update the TX policy settings for allowed Request Methods, File Extensions, etc to better reflect your enviornment that is being protected.
	 
	 Make sure your GeoIP and Project Honeypot settings are specified if you are using them. The use Project Honeypot requires a free API key. These require an account but can be obtained at https://www.projecthoneypot.org/httpbl_configure.php.
	 
	 Be sure to check out the other settings present within the setup.conf file, there are many other options that have to do with aspects of web application security that are beyond this document.

  2) The most effective method we have seen for deploying the Core Rule Set is to symlink these files to a location that Apache can reach. Of course you may always copy these files to such a location as well.
  You will want to create symlinks for the following:

     1) The main modsecurity_crs_10_setup.conf file
     2) Any rules from the rules directory you want to deploy
     3) Any remaining rules from the util directory

	$ pwd
	/usr/local/apache/conf/crs
	$ ls
	rules\                               
	util\                              
	CHANGES 
	INSTALL
	LICENSE                            
	modsecurity_crs_10_setup.conf  
	README.md
	$
	$ sudo ln -s /current/path/to/modsecurity_crs_10_setup.conf usr/local/apache/conf/crs/modsecurity_crs_10_setup.conf
	$ for f in `ls rules/` ; do sudo ln -s /current/path/to/rules/$f /usr/local/apache/conf/crs/rules/$f ; done
	
	Upon performing a directory listing of /usr/local/apache/conf/crs (or wherever you set your CRS configurations directory) you should see a list of symlinked files
 

  3) Add the following line to your httpd.conf (assuming
     you've placed the rule files into conf/crs/):

        <IfModule security2_module>
                Include conf/crs/modsecurity_crs_10_setup.conf
                Include conf/crs/rules/*.conf
        </IfModule>

  3) Restart web server.

  4) Make sure your web sites are still running fine.

  5) Simulate an attack against the web server. Then check
     the attack was correctly logged in the Apache error log,
     ModSecurity debug log (if you enabled it) and ModSecurity
     audit log (if you enabled it).


